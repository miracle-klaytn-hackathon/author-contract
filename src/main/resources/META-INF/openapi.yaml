openapi: '3.0.0'
info:
  version: '1'
  title: Author Token API
  description: API for interacting with Smart Contracts of Author Token
servers:
  - url: /author-contract
paths:
  /auth/siwe/nonce:
    get:
      operationId: getNonce
      tags:
        - SigninWithEthereum
      description: Get Nonce for create SIWE (Signin with Ethereum) message
      responses:
        200:
          description: Return a random value as string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiweNonce'
        default:
          description: Error when getting nonce value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /auth/siwe/verify:
    post:
      operationId: verifySiweMessage
      tags:
        - SigninWithEthereum
      description: Verify siwe message with user signature
      requestBody:
        description: Siwe Message with signature
        required: true
        content:
           application/json:
              schema:
                $ref: '#/components/schemas/SiweRequest'
      responses:
        200:
          description: Return a JWT token if message is verified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiweResponse'
        default:
          description: Error when verifying siwe message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /books/recommendation:
    get:
      operationId: getRecommendation
      tags:
        - BookContract
      description: Get recommend Book Contract NFTs to be mint
      responses:
        200:
          description: Return a list of recommend Book Contract NFTs
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/SmartContract'
        default:
          description: Error when invoking contract function
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /profiles:
    post:
      operationId: createUserProfile
      tags:
        - UserProfile
      description: Create a new user profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
            example:
              wallet_address: "0x8a17DA5C4F375E694F7fab7799E233A8fF101C26"
              username: miracle_team
              email: miracleklaytnhackathon@gmail.com
              
      responses:
        201:
          description: Successfull created a profile.
          headers:
            Location:
              schema:
                type: string
              description: URL to the created resource.

  /profiles/{address}:
    get:
      operationId: getUserProfile
      tags:
        - UserProfile
      description: Get User Profile by ID
      parameters:
        - in: path
          required: true
          name: address
          schema:
            type: string
      responses:
        200:
          description: Return the detail of User Profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
              example:
                id: 1
                wallet_address: "0x8a17DA5C4F375E694F7fab7799E233A8fF101C26"
                username: miracle_team
                email: miracleklaytnhackathon@gmail.com

  /books/{address}:
    get:
      operationId: getContractInfo
      tags:
        - BookContract
      description: Get On-chain information for a book token smart contract
      parameters:
        - in: path
          required: true
          name: address
          schema:
            type: string
      responses:
        200:
          description: Return name, address, author and abi of the contract
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartContract'
        default:
          description: Error when invoking contract function
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /books/abi:
    get:
      operationId: getBookContractABI
      tags:
      - BookContract
      description: Get Application Binary Interface (ABI) of Book Contract
      responses:
        200:
          description: Return name, address, author and abi of the contract
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error when invoking contract function
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /author:
    get:
      operationId: getAuthorContract
      tags:
        - AuthorContract
      description: Get Author Contract on-chain information
      responses:
        200:
          description: On-chain information is available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartContract'
        default:
          description: Error when invoking contract function
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /author/total:
    get:
      operationId: getTotalToken
      tags:
        - AuthorContract
      description: Get the total amount of available token
      responses:
        200:
          description: Return the amount of available token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalToken'
        default:
          description: Error when invoking contract function
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /author/balance/{accountAddress}:
    get:
      operationId: getAccountBalance
      tags:
        - AuthorContract
      description: Get Balance of a given address
      parameters:
        - in: path
          required: true
          name: accountAddress
          schema:
            type: string
      responses:
        200:
          description: Return the balance of the given address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalance'
        default:
          description: Error when invoking contract function
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /author/mint:
    post:
      operationId: mintAuthorToken
      tags:
        - AuthorContract
      description: Mint Author Contract Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MintFTRequest'
      responses:
        200:
          description: Token minted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MintReceipt'
        default:
          description: Error when invoking contract function
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    SiweNonce:
      type: object
      properties:
        nonce:
          type: string

    SiweRequest:
      type: object
      properties:
        message:
          type: string
        signature:
          type: string
    
    SiweResponse:
      type: object
      properties:
        token:
          type: string

    UserProfile:
      type: object
      properties:
        id:
          type: string
        wallet_address:
          type: string
        username:
          type: string
        email:
          type: string
        avatar_url:
          type: string

    SmartContract:
      type: object
      properties:
        id:
          type: string
        address:
          type: string
        owner:
          type: string
        name:
          type: string
        symbol:
          type: string

    TotalToken:
      type: object
      properties:
        contractAddress:
          type: string
        contractName:
          type: string
        amount:
          type: number

    AccountBalance:
      type: object
      properties:
        contractAddress:
          type: string
        accountAddress:
          type: string
        balance:
          type: integer

    MintFTRequest:
      type: object
      properties:
        privateKey:
          type: string
        amount:
          type: integer

    MintReceipt:
      type: object
      properties:
        minterAddress:
          type: string
        tokenAddress:
          type: string
        txHash:
          type: string
        txBlockNumber:
          type: string
        txBlockHash:
          type: string
        gasCost:
          type: string

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
